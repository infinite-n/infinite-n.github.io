<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="https://www.w3.org/2005/Atom">
  <title>R1SE基地</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-11-22T07:30:40.652Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>开心市民小牛</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Bugku代码审计</title>
    <link href="http://yoursite.com/2019/11/20/Bugku%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    <id>http://yoursite.com/2019/11/20/Bugku%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</id>
    <published>2019-11-20T10:02:20.615Z</published>
    <updated>2019-11-22T07:30:40.652Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Bugku代码审计——writeup"><a href="#Bugku代码审计——writeup" class="headerlink" title="Bugku代码审计——writeup"></a>Bugku代码审计——writeup</h1><p>Bugku中几道代码审计题的题解，以及相关的一些知识点</p><p>##目录<br>1.md5加密相等绕过<br>2.十六进制与数字比较<br>3.ereg正则%00截断<br>4.strpos数组绕过  </p><a id="more"></a>  <p>##1.md5加密相等绕过<br>如果知道MD5碰撞的概念，同时知道了在PHP中的MD5中的0e的比较，这道题目就十分的简单。<br>如果md5的值是以0e开头的，那么就与其他的0e开头的Md5值是相等的。<br>例子如下：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">md5(&apos;s878926199a&apos;)=0e545993274517709034328855841020</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">md5(&apos;s155964671a&apos;)=0e342768416822451524974117254469 </span><br><span class="line">```  </span><br><span class="line">可以看到两者的md5值都是以0e开头的，则   </span><br><span class="line">`md5(&apos;s878926199a&apos;)==md5(&apos;s155964671a&apos;)`   </span><br><span class="line">就是True  </span><br><span class="line">php关于==号是这样处理的，如果一边是整型，另一边也需要是整型。  </span><br><span class="line">($a != &apos;QNKCDZO&apos; &amp;&amp; $md51 == $md52)  </span><br><span class="line">发现 $a != &apos;QNKCDZO&apos; 并且 $md51 == $md52  </span><br><span class="line">因为  </span><br><span class="line">`$md51 = md5(&apos;QNKCDZO&apos;)=0e830400451993494058024219903391  `  </span><br><span class="line">根据上文介绍，我们发现只要满足md5加密后为       &quot;0e***************&quot;就可以  </span><br><span class="line">所以随便挑一个0e开头的md5对应的原码 构造 playload即可  </span><br><span class="line">比如  </span><br><span class="line">` ?a=s878926199a ` </span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/2019091020150030.png)</span><br><span class="line"></span><br><span class="line">##2.十六进制与数字比较</span><br><span class="line">首先分析代码，变量temp不能存在1~9之间的数字  </span><br><span class="line">又要求temp=3735929054  </span><br><span class="line">这本来是自相矛盾的，但php在转码时会把16进制转化为十进制  </span><br><span class="line">于是把3735929054转换成16进制为0xdeadc0de  </span><br><span class="line">最后需要number==temp是才可以输出flag   </span><br><span class="line">然后对password赋值，根据题目提示，直接将password赋值为number的十六进制  </span><br><span class="line"></span><br><span class="line">##3.ereg正则%00截断</span><br><span class="line">代码里有两个函数需要注意ereg() 和strpos()   </span><br><span class="line">先去查了一下PHP里的strpos() 函数用法：  </span><br><span class="line">strpos() 函数查找字符串在另一字符串中第一次出现的位置（区分大小写）  </span><br><span class="line">可以先尝试利用数组绕过这两个函数  </span><br><span class="line">ereg() 和strpos() 的参数不能够是数组，返回的是null  </span><br><span class="line">null!==false</span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/20190916123140323.png)</span><br><span class="line">根据题目提示，可以用另一个方法——%00截断绕过正则匹配</span><br><span class="line">ereg() 正则限制了password格式，只能是一个或者多个数字、大小写字母，strpos() 查找某字符串需要出现*-*</span><br><span class="line">两者矛盾，所以要%00截断绕过</span><br><span class="line">并且长度得是长度&lt;8且大小要&gt;9999999，所以用科学记数法1e9即1*10^9</span><br><span class="line"></span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/20190916124613748.png)</span><br><span class="line">##4.strpos数组绕过</span><br><span class="line">先尝试了一下数组，成功得到flag</span><br></pre></td></tr></table></figure><p><a href="http://123.206.87.240:9009/15.php?ctf[]=1" target="_blank" rel="noopener">http://123.206.87.240:9009/15.php?ctf[]=1</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">再细看代码要求——get传参ctf，只能是1~9，strpos() 查找某字符串需要出现#biubiubiu  </span><br><span class="line">两者矛盾，所以要%00截断绕过  </span><br><span class="line">尝试payload，一直不对，发现#并没被自动转码为%23</span><br></pre></td></tr></table></figure><p><a href="http://123.206.87.240:9009/15.php?ctf=3%00#biubiubiu" target="_blank" rel="noopener">http://123.206.87.240:9009/15.php?ctf=3%00#biubiubiu</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">于是手动更改了一下，成功得到flag</span><br></pre></td></tr></table></figure><p><a href="http://123.206.87.240:9009/15.php?ctf=3%00%23biubiubiu" target="_blank" rel="noopener">http://123.206.87.240:9009/15.php?ctf=3%00%23biubiubiu</a><br>```</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Bugku代码审计——writeup&quot;&gt;&lt;a href=&quot;#Bugku代码审计——writeup&quot; class=&quot;headerlink&quot; title=&quot;Bugku代码审计——writeup&quot;&gt;&lt;/a&gt;Bugku代码审计——writeup&lt;/h1&gt;&lt;p&gt;Bugku中几道代码审计题的题解，以及相关的一些知识点&lt;/p&gt;
&lt;p&gt;##目录&lt;br&gt;1.md5加密相等绕过&lt;br&gt;2.十六进制与数字比较&lt;br&gt;3.ereg正则%00截断&lt;br&gt;4.strpos数组绕过  &lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>你好</title>
    <link href="http://yoursite.com/2019/11/01/%E4%BD%A0%E5%A5%BD/"/>
    <id>http://yoursite.com/2019/11/01/%E4%BD%A0%E5%A5%BD/</id>
    <published>2019-11-01T05:57:50.000Z</published>
    <updated>2019-11-01T07:33:52.527Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="A" scheme="http://yoursite.com/categories/A/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/10/30/hello-world/"/>
    <id>http://yoursite.com/2019/10/30/hello-world/</id>
    <published>2019-10-30T11:14:31.586Z</published>
    <updated>2019-10-30T11:14:31.586Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
